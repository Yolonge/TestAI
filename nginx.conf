events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Расширенное логирование для отладки
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" "$upstream_addr" "$upstream_status"';
    access_log  /var/log/nginx/access.log  main;
    error_log   /var/log/nginx/error.log debug;
    
    # Настройки для лучшей производительности
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    types_hash_max_size 2048;
    
    # Определение апстримов для сервисов
    upstream frontend_servers {
        server frontend:3000;
    }
    
    upstream backend_servers {
        server codeduelplatform:80;
    }
    
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        
        # Страница проверки здоровья
        location = /health-check.html {
            root /usr/share/nginx/html;
            index health-check.html;
        }
        
        # Статическая страница для проверки
        location = /static-check.html {
            root /usr/share/nginx/html;
            index static-check.html;
        }
        
        # Основная директория для фронтенда
        location / {
            # Сначала пробуем статическую страницу, если фронтенд недоступен
            try_files /static-check.html @frontend;
        }
        
        location @frontend {
            proxy_pass http://frontend_servers;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 600s;
            
            # Отладка для прокси
            proxy_intercept_errors on;
            error_page 502 503 504 = @fallback;
        }
        
        # Запасной вариант, если фронтенд недоступен
        location @fallback {
            root /usr/share/nginx/html;
            try_files /static-check.html =502;
        }

        # API запросы
        location /api/ {
            proxy_pass http://backend_servers/api/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }

        # SignalR хабы
        location /hubs/ {
            proxy_pass http://backend_servers/hubs/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 86400s; # Для долгоживущих WebSocket соединений
        }
    }
} 