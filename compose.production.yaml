version: '3'

services:
  codeduelplatform:
    image: codeduelplatform
    build:
      context: .
      dockerfile: CodeDuelPlatform/Dockerfile
    depends_on:
      - postgres
      - redis
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=User ID=postgres;Password=5959;Host=postgres;Port=5432;Database=testai;
      - ConnectionStrings__RedisConnection=redis:6379,password=redis_password
      - Redis__MatchmakingQueueExpiry=300
      - Redis__ActiveDuelExpiry=3600
    ports:
      - "80:80"
      - "443:443"
    restart: always
    networks:
      - codeduel-network

  frontend:
    image: frontend-react
    build:
      context: ./frontend-react
      dockerfile: Dockerfile
    depends_on:
      - codeduelplatform
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://176.109.111.167:80
    restart: always
    networks:
      - codeduel-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=5959
      - POSTGRES_DB=testai
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    networks:
      - codeduel-network

  redis:
    image: redis:7.0-alpine
    command: redis-server --appendonly yes --requirepass redis_password
    volumes:
      - redis_data:/data
    restart: always
    networks:
      - codeduel-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - codeduelplatform
      - frontend
    restart: always
    networks:
      - codeduel-network

networks:
  codeduel-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: 