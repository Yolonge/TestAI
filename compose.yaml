services:
  codeduelplatform:
    image: codeduelplatform
    build:
      context: .
      dockerfile: CodeDuelPlatform/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - ConnectionStrings__DefaultConnection=User ID=postgres;Password=5959;Host=postgres;Port=5432;Database=testai;
      - ConnectionStrings__RedisConnection=redis:6379,password=redis_password
      - Redis__MatchmakingQueueExpiry=300
      - Redis__ActiveDuelExpiry=3600
    ports:
      - "8080:80"
      - "8081:443"
    restart: unless-stopped

  frontend-build:
    build:
      context: ./frontend-react
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
    ports:
      - 3000:3000
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=5959
      - POSTGRES_DB=testai
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7.0-alpine
    command: redis-server --appendonly yes --requirepass redis_password
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  nginx:
    image: nginx:stable-alpine
    ports: 
      - 80:80
    depends_on:
      codeduelplatform:
        condition: service_started
      frontend-build:
        condition: service_started
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
