// <auto-generated />
using System;
using CodeDuelPlatform.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CodeDuelPlatform.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CodeDuelPlatform.Models.Duel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("FirstUserCorrectAnswers")
                        .HasColumnType("integer");

                    b.Property<int>("FirstUserId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDraw")
                        .HasColumnType("boolean");

                    b.Property<int>("SecondUserCorrectAnswers")
                        .HasColumnType("integer");

                    b.Property<int>("SecondUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("WinnerId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FirstUserId");

                    b.HasIndex("SecondUserId");

                    b.HasIndex("WinnerId");

                    b.ToTable("Duels");
                });

            modelBuilder.Entity("CodeDuelPlatform.Models.DuelQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AnswerTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DuelId")
                        .HasColumnType("integer");

                    b.Property<string>("FirstUserAnswer")
                        .HasColumnType("text");

                    b.Property<bool>("FirstUserSubmitted")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsFirstUserAnswerCorrect")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsSecondUserAnswerCorrect")
                        .HasColumnType("boolean");

                    b.Property<int>("QuestionId")
                        .HasColumnType("integer");

                    b.Property<int>("QuestionOrder")
                        .HasColumnType("integer");

                    b.Property<string>("SecondUserAnswer")
                        .HasColumnType("text");

                    b.Property<bool>("SecondUserSubmitted")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("DuelId");

                    b.HasIndex("QuestionId");

                    b.ToTable("DuelQuestions");
                });

            modelBuilder.Entity("CodeDuelPlatform.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BlanksData")
                        .HasColumnType("jsonb");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CorrectAnswer")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Difficulty")
                        .HasColumnType("integer");

                    b.Property<string>("Explanation")
                        .HasColumnType("text");

                    b.Property<string>("Options")
                        .HasColumnType("jsonb");

                    b.Property<int>("QuestionType")
                        .HasColumnType("integer");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BlanksData")
                        .HasDatabaseName("IX_Questions_BlanksData_GIN");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("BlanksData"), "GIN");

                    b.HasIndex("Id")
                        .HasDatabaseName("IX_Questions_FillBlanks")
                        .HasFilter("\"QuestionType\" = 3");

                    b.HasIndex("Options")
                        .HasDatabaseName("IX_Questions_Options_GIN");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Options"), "GIN");

                    b.HasIndex("QuestionType");

                    b.HasIndex("QuestionType", "Category");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("CodeDuelPlatform.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsSearchingOpponent")
                        .HasColumnType("boolean");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Rating")
                        .HasColumnType("integer");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("TotalLosses")
                        .HasColumnType("integer");

                    b.Property<int>("TotalWins")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CodeDuelPlatform.Models.Duel", b =>
                {
                    b.HasOne("CodeDuelPlatform.Models.User", "FirstUser")
                        .WithMany("DuelsAsFirstUser")
                        .HasForeignKey("FirstUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CodeDuelPlatform.Models.User", "SecondUser")
                        .WithMany("DuelsAsSecondUser")
                        .HasForeignKey("SecondUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CodeDuelPlatform.Models.User", "Winner")
                        .WithMany()
                        .HasForeignKey("WinnerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("FirstUser");

                    b.Navigation("SecondUser");

                    b.Navigation("Winner");
                });

            modelBuilder.Entity("CodeDuelPlatform.Models.DuelQuestion", b =>
                {
                    b.HasOne("CodeDuelPlatform.Models.Duel", "Duel")
                        .WithMany("DuelQuestions")
                        .HasForeignKey("DuelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CodeDuelPlatform.Models.Question", "Question")
                        .WithMany("DuelQuestions")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Duel");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("CodeDuelPlatform.Models.Duel", b =>
                {
                    b.Navigation("DuelQuestions");
                });

            modelBuilder.Entity("CodeDuelPlatform.Models.Question", b =>
                {
                    b.Navigation("DuelQuestions");
                });

            modelBuilder.Entity("CodeDuelPlatform.Models.User", b =>
                {
                    b.Navigation("DuelsAsFirstUser");

                    b.Navigation("DuelsAsSecondUser");
                });
#pragma warning restore 612, 618
        }
    }
}
